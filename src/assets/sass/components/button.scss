//
// BUTTONS
// =======
//

$min-height: control-height();
$vertical-padding: ($min-height - rem(20px) - rem(2px)) / 2;

$extra-slim-min-height: rem(20px);
$extra-slim-vertical-padding: ($extra-slim-min-height - rem(15px) - rem(1px)) / 2;
$slim-min-height: rem(30px);
$slim-vertical-padding: ($slim-min-height - rem(20px) - rem(2px)) / 2;
$large-min-height: rem(44px);
$large-vertical-padding: ($large-min-height - rem(20px) - rem(2px)) / 2;

//
// BASE STYLES
// Base styles to persuade `<a>`, `<button>` and `<input>` elements to look the
// same as each other, across various browsers.
//

.btn {
  @include recolor-icon(color(ink, lighter));
  position: relative;
  display: inline-block;
  min-height: $min-height;
  min-width: $min-height;
  margin: 0;
  padding: $vertical-padding rem(12px);
  background: linear-gradient(to bottom, color(white), color(sky, lighter));
  box-shadow: shadow(faint);
  border-radius: border-radius();
  line-height: 1;
  color: color(ink);
  text-align: center;
  cursor: pointer;
  user-select: none;
  text-decoration: none;
  transition-property: background, border, box-shadow;
  transition-duration: duration();
  transition-timing-function: easing();

  &:hover {
    background: linear-gradient(to bottom, color(sky, lighter), color(sky, light));
    border-color: color(sky, dark);
  }

  &:focus {
    border-color: color(indigo);
    outline: 0;
    box-shadow: 0 0 0 1px color(indigo);
  }

  &:active {
    // Same color gradient is necessary for background transitions
    background: linear-gradient(to bottom, color(sky, light), color(sky, light));
    border-color: color(sky, dark);
    box-shadow:
      0 0 0 1px transparent,
      inset 0 1px 1px 0 rgba(color(ink, lighter), 0.1),
      inset 0 1px 4px 0 rgba(color(ink, lighter), 0.2);
  }

  &.btn--disabled {
    @include recolor-icon(color(ink, lightest));
    background: color(sky, light);
    color: color(ink, lightest);
  }
}
//
// BUTTON MODIFIERS
// Remember to add button variation modifier examples to the style guide page.
//

.btn--primary {
  @include button-filled(color(purple), color(purple, dark));
  @include recolor-icon(color(white));

  &.btn--disabled {
    @include recolor-icon(color(white));
    background: color(green, light);
    border-color: color(green, light);
    box-shadow: none;
    color: color(white);
  }
}

.btn--outline {
  @include button-outline(color(ink, lighter));

  &.btn--disabled {
    background-color: color(white);
    border-color: color(sky, dark);
    color: color(ink, lightest);
  }
}

.btn--destructive {
  @include button-filled(color(red), color(red, dark));
  @include recolor-icon(color(white));

  &.btn--disabled {
    @include recolor-icon(color(white));
    background: color(red, light);
    border-color: color(red, light);
    box-shadow: none;
    color: color(white);
  }
}

.btn--destructive.btn--outline {
  @include button-outline(color(red));
  @include recolor-icon(color(red, dark));
}

.btn--disabled {
  cursor: default;
  pointer-events: none;
}

.btn--disabled[title] {
  cursor: default;
  pointer-events: all !important;
}

.btn--large {
  min-height: $large-min-height;
  min-width: $large-min-height;
  padding: $large-vertical-padding spacing(loose);
}

.btn--icon {
  font-size: font-size(body);
  font-weight: 400;
  line-height: line-height(body);

  text-transform: initial;
  letter-spacing: initial;
  transition: color duration() easing();

  svg {
    vertical-align: middle;
    margin-right: 0.55556rem;
  }

  &:first-child {
    // This compensates for the typical icon used in buttons being
    // inset within its bounding box.
    margin-left: -2px;
    margin-right: spacing(extra-tight);
  }

  &:last-child {
    margin-left: spacing(extra-tight);

    // This compensates for the disclosure icon, which is substantially
    // inset within the viewbox (and makes it look like there is too much
    // spacing on the right of the button)
    margin-right: -5px;
  }

  &:only-child {
    margin: 0;
  }
}

.btn--plain {
  background: transparent;
  border: border(transparent);
  box-shadow: none;
  color: color(blue);
  @include text-style-body;

  &:hover,
  &:focus,
  &:active {
    @include recolor-icon(color(blue, dark));
    background: transparent;
    border: border(transparent);
    box-shadow: none;
    color: color(blue, dark);
  }
}

.btn--icon-only {
  padding-left: spacing(tight);
  padding-right: spacing(tight);
}

.btn--small {
  min-height: $slim-min-height;
  min-width: $slim-min-height;
  padding: $slim-vertical-padding spacing(tight);
}

.btn--x-small {
  min-height: $extra-slim-min-height;
  min-width: $extra-slim-min-height;
  padding: $extra-slim-vertical-padding spacing(tight);
}

.btn--text-small {
  font-size: font-size(body, small);
  line-height: line-height(body, small);
}

//
// BUTTON GROUP
// Contains multiple buttons and adds spacing between them.
//

.btn--block {
  display: block;
  width: 100%;
}

//
// BUTTON GROUP
// Contains multiple buttons and adds spacing between them.
//

.btn-group {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  margin-top: (-1 * spacing(tight));
  margin-left: (-1 * spacing(tight));
  > .btn, > .btn-group__item {
    margin-top: spacing(tight);
    margin-left: spacing(tight);
  }
}

//
// UNSTYLED BUTTON
// Simple reset to make button elements look more like text links.
//

.text-btn {
  padding: 0;
  margin: 0;
  border: none;
  background: none;
  cursor: pointer;
  font: inherit;
  @extend a;

  &:focus {
    outline: none;
  }
}

